name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.20.4'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t medusa-app .

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 050451372657.dkr.ecr.ap-south-1.amazonaws.com

    - name: Tag and push Docker image
      run: |
        docker tag medusa-app:latest 050451372657.dkr.ecr.ap-south-1.amazonaws.com/medusa-server:latest
        docker push 050451372657.dkr.ecr.ap-south-1.amazonaws.com/medusa-server:latest

    - name: Register new ECS Task Definition
      run: |
        aws ecs register-task-definition \
          --region $AWS_REGION \
          --family medusa-task \
          --network-mode awsvpc \
          --container-definitions '[{
            "name": "medusa-container",
            "image": "050451372657.dkr.ecr.ap-south-1.amazonaws.com/medusa-server:latest",
            "essential": true,
            "memory": 512,
            "cpu": 256
          }]' \
          --requires-compatibilities FARGATE \
          --memory 512 \
          --cpu 256 \
          --execution-role-arn arn:aws:iam::050451372657:role/ecs-task-execution-role \
          --task-role-arn arn:aws:iam::050451372657:role/ecs-task-role

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --region $AWS_REGION \
          --cluster medusa-cluster \
          --service medusa-service \
          --force-new-deployment

